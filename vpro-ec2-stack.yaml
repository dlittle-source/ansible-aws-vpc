---
- name: Setup Vprofile Stack
  hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: Import VPC setup Variable
      include_vars: vars/vpc-output_vars
    
    - name: Import vprofile setup variables
      include_vars: vars/vprostacksetup

    - name: Create vprofile ec2 keypair
      ec2_key:
        name: vprokey
        region: "{{ region }}"
      register: vprokey_out

    - name: Save private key into file loginkey_vpro.pem
      copy:
        content: "{{ vprokey_out.key.private_key }}"
        dest: "./loginkey_vpro.pem"
        mode: 0600
      when: vprokey_out.changed

    - name: Create Security Group for load balancer
      amazon.aws.ec2_group:
        name: vproELB-sg
        description: Allow port 80 from anywhere and all ports within sg
        region: "{{ region }}"
        vpc_id: "{{ vpcid }}"
        rules:
         - proto: tcp
           from_port: 80
           to_port: 80
           cidr_ip: 0.0.0.0/0
      register: vproELBSG_out

    - name: Create Security Group for Vprofile Stack
      amazon.aws.ec2_group:
        name: vproStack-sg
        description: Allow port 22 from anywhere and all ports within sg
        region: "{{ region }}"
        vpc_id: "{{ vpcid }}"
        purge_rules: no
        rules:
          - proto: tcp
            from_port: 80
            to_port: 80
            group_ip: "{{ vproELBSG_out.group_id }}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id": "{{BastionSGid}}"
      register: vproStackSG_out

    - name: Update Security Group with its own sg
      amazon.aws.ec2_group:
        name: vproStack-sg
        description: Allow port 22 from anywhere and all ports within sg  
        region: "{{ region }}"
        vpc_id: "{{ vpcid }}"
        purge_rules: no
        rules:
          - proto: all
            group_id: "{{ vproStackSG_out.group_id }}"
    
    - name: Creating Nginx web01
      ec2:
        key_name: vprokey
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ nginx_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "web01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "web01"
          Owner: "DevOps Team"
        group_id: "{{ vproStackSG_out.group_id }}"
        vpc_subnet_id: "{{ privsubnetid }}"
      register: web01_out
    
    - name: Creating memcache mc01
      ec2:
        key_name: vprokey
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ memcache_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mc01"
          Project: Vprofile
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "mc01"
          Owner: "DevOps Team"
        group_id: "{{ vproStackSG_out.group_id }}"
        vpc_subnet_id: "{{ privsubnetid }}"
      register: mc01_out
    
    - name: Creating RabbitMQ rmq01
      ec2:
        key_name: vprokey
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ rmq_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "mq01"
          Project: Vprofile
          Owner: "DevOps Team"
        exact_count: 1
        count_tag:
          Name: "mq01"
          Project: Vprofile
          Owner: DevOps Team
        group_id: "{{ vproStackSG_out.group_id }}"
        vpc_subnet_id: "{{ privsubnetid }}"
      register: rmq01_out

    - name: Creating MySQL db01
      ec2:
        key_name: vprokey
        region: "{{ region }}"
        instance_type: t2.micro
        image: "{{ mysql_ami }}"
        wait: yes
        wait_timeout: 300
        instance_tags:
          Name: "db01"
          Project: Vprofile
          Owner: DevOps Team
        exact_count: 1
        count_tag:
          Name: "db01"
          Project: "Vprofile"
          Owner: "DevOps Team"
        group_id: "{{ vproStackSG_out.group_id }}"
        vpc_subnet_id: "{{ privsubnetid }}"
      register: db01_out
     
    